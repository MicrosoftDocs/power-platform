{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Power Platform REST API - licensing",
    "description": "Unified API for all administrative capabilities in Microsoft Power Platform.",
    "version": "2022-03-01-preview"
  },
  "host": "api.powerplatform.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/licensing/billingPolicies": {
      "get": {
        "tags": [
          "BillingPolicy"
        ],
        "summary": "Get the list of billing policies for the tenant.",
        "operationId": "ListBillingPolicies",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$top",
            "description": "The ISV contract ID.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BillingPolicyResponseModelResponseWithOdataContinuation"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "BillingPolicy"
        ],
        "summary": "Creates the billing policy at tenant level.",
        "operationId": "CreateBillingPolicy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The billing policy.",
            "schema": {
              "$ref": "#/definitions/BillingPolicyPostRequestModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created",
            "schema": {
              "$ref": "#/definitions/BillingPolicyResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/licensing/billingPolicies/{billingPolicyId}": {
      "get": {
        "tags": [
          "BillingPolicy"
        ],
        "summary": "Get the billing policy at tenant level by policy ID.",
        "operationId": "GetBillingPolicy",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "billingPolicyId",
            "description": "The billing policy ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BillingPolicyResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "BillingPolicy"
        ],
        "summary": "Updates the billing policy at tenant level.",
        "operationId": "UpdateBillingPolicy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "billingPolicyId",
            "description": "The billing policy ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The billing policy",
            "schema": {
              "$ref": "#/definitions/BillingPolicyPutRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BillingPolicyResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "BillingPolicy"
        ],
        "summary": "Delete billing policy.",
        "operationId": "DeleteBillingPolicy",
        "parameters": [
          {
            "in": "path",
            "name": "billingPolicyId",
            "description": "The billing policy ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/licensing/billingPolicies/{billingPolicyId}/environments": {
      "get": {
        "tags": [
          "BillingPolicyEnvironment"
        ],
        "summary": "Get the list of environments linked to the billing policy.",
        "operationId": "ListBillingPolicyEnvironments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "billingPolicyId",
            "description": "The billing policy ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BillingPolicyEnvironmentResponseModelV1ResponseWithOdataContinuation"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/licensing/billingPolicies/{billingPolicyId}/environments/{environmentId}": {
      "get": {
        "tags": [
          "BillingPolicyEnvironment"
        ],
        "summary": "Get the environment linked to the billing policy.",
        "operationId": "GetBillingPolicyEnvironment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "billingPolicyId",
            "description": "The billing policy ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "The environment ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BillingPolicyEnvironmentResponseModelV1"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/licensing/billingPolicies/{billingPolicyId}/environments/add": {
      "post": {
        "tags": [
          "BillingPolicyEnvironment"
        ],
        "summary": "Link billing policy ID with environments.",
        "operationId": "AddBillingPolicyEnvironment",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "billingPolicyId",
            "description": "The billing policy ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Model to represents the list of environments to be linked.",
            "schema": {
              "$ref": "#/definitions/BillingPolicyEnvironmentAddRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/licensing/billingPolicies/{billingPolicyId}/environments/remove": {
      "post": {
        "tags": [
          "BillingPolicyEnvironment"
        ],
        "summary": "Unlink billing policy ID from environments.",
        "operationId": "RemoveBillingPolicyEnvironment",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "billingPolicyId",
            "description": "The billing policy ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Model to represents the list of environments to be unlinked.",
            "schema": {
              "$ref": "#/definitions/BillingPolicyEnvironmentRemoveRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/licensing/billingPolicies/{billingPolicyId}/refreshProvisioningStatus": {
      "post": {
        "tags": [
          "BillingPolicy"
        ],
        "summary": "Refresh the billing policy provisioning status.",
        "operationId": "RefreshProvisioningStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "billingPolicyId",
            "description": "The billing policy ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BillingPolicyResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/licensing/environments/{environmentId}/allocations": {
      "get": {
        "tags": [
          "CurrencyAllocation"
        ],
        "summary": "Get currency allocations for the environment.",
        "operationId": "GetCurrencyAllocationByEnvironment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "environmentId",
            "description": "The environment ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AllocationsByEnvironmentResponseModelV1"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "CurrencyAllocation"
        ],
        "summary": "Allocate and deallocate the currencies for the environment.",
        "operationId": "PatchCurrencyAllocationByEnvironment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "environmentId",
            "description": "The environment ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Environment currency allocation.",
            "schema": {
              "$ref": "#/definitions/AllocationsByEnvironmentPatchRequestModelV1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AllocationsByEnvironmentResponseModelV1"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/licensing/environments/{environmentId}/billingPolicy": {
      "get": {
        "tags": [
          "EnvironmentBillingPolicy"
        ],
        "summary": "Get the linked billing policy details for an environment.",
        "operationId": "GetEnvironmentBillingPolicy",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "environmentId",
            "description": "The environment ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BillingPolicyResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/licensing/isvContracts": {
      "get": {
        "tags": [
          "ISVContract"
        ],
        "summary": "Get the list of ISV contracts for the tenant.",
        "description": "Get the list of ISV contracts for the tenant.",
        "operationId": "ListISVContracts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$top",
            "description": "Top limit of results.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IsvContractResponseModelResponseWithOdataContinuation"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "ISVContract"
        ],
        "summary": "Create an ISV contract.",
        "description": "Create an ISV contract.",
        "operationId": "CreateISVContract",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The ISV contract",
            "schema": {
              "$ref": "#/definitions/IsvContractPostRequestModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IsvContractResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/licensing/isvContracts/{isvContractId}": {
      "get": {
        "tags": [
          "ISVContract"
        ],
        "summary": "Get an ISV contract by its identifier (ID).",
        "description": "Get an ISV contract by its identifier (ID).",
        "operationId": "GetISVContract",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "isvContractId",
            "description": "The ISV contract ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IsvContractResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "ISVContract"
        ],
        "summary": "Update an ISV contract.",
        "description": "Update an ISV contract.",
        "operationId": "UpdateISVContract",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "isvContractId",
            "description": "The ISV contract ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The ISV contract",
            "schema": {
              "$ref": "#/definitions/IsvContractPutRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IsvContractResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "ISVContract"
        ],
        "summary": "Delete an ISV contract.",
        "description": "Delete an ISV contract.",
        "operationId": "DeleteISVContract",
        "parameters": [
          {
            "in": "path",
            "name": "isvContractId",
            "description": "The ISV contract ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/licensing/storageWarning/{storageCategory}": {
      "get": {
        "tags": [
          "StorageWarnings"
        ],
        "summary": "Storage warning thresholds filtered by category.",
        "operationId": "GetStorageWarningByCategory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "storageCategory",
            "description": "The storage category value.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StorageWarningThresholdsDocument"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/licensing/storageWarning/{storageCategory}/{entityName}": {
      "get": {
        "tags": [
          "StorageWarnings"
        ],
        "summary": "Storage warning thresholds filtered by category and storage entity name.",
        "operationId": "GetStorageWarningByCategoryAndEntity",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "storageCategory",
            "description": "The storage category value.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "entityName",
            "description": "The name of the entity.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StorageWarningThresholdsDocument"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/licensing/storageWarning/getAllStorageWarnings": {
      "get": {
        "tags": [
          "StorageWarnings"
        ],
        "summary": "Storage warning thresholds.",
        "operationId": "ListStorageWarnings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StorageWarningThresholdsDocument"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/licensing/TemporaryCurrencyEntitlement/{currencyType}/Count": {
      "post": {
        "tags": [
          "TemporaryCurrencyEntitlement"
        ],
        "summary": "Gets the number of temporary currency entitlements that have been requested this month, and the maximum allowed per month, for the provided currency type.",
        "operationId": "RetrieveTemporaryCurrencyEntitlementCount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "currencyType",
            "description": "The currency type.",
            "required": true,
            "type": "string",
            "enum": [
              "AI",
              "AppPass",
              "AppPassForTeams",
              "Invoice",
              "MCSSessions",
              "MCSMessages",
              "PAHostedRPA",
              "PAUnattendedRPA",
              "PerFlowPlan",
              "PortalAddOns",
              "PortalLogins",
              "PortalViews",
              "PowerPagesAuthenticated",
              "PowerPagesAnonymous",
              "PowerAutomatePerProcess",
              "ProcessMiningDataStorage",
              "SCMessages",
              "VAConversations"
            ]
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetTemporaryCurrencyEntitlementCountResponseModel"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/licensing/tenantCapacity": {
      "get": {
        "tags": [
          "TenantCapacityDetails"
        ],
        "summary": "Get the tenant capacity details for the tenant.",
        "operationId": "GetTenantCapacityDetails",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TenantCapacityDetailsModel"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/licensing/tenantCapacity/currencyReports": {
      "get": {
        "tags": [
          "CurrencyReports"
        ],
        "summary": "Get the currency report for the tenant.",
        "operationId": "ListCurrencyReports",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "includeAllocations",
            "description": "Flag indicating to include allocations.",
            "type": "boolean",
            "default": true
          },
          {
            "in": "query",
            "name": "includeConsumptions",
            "description": "Flag indicating to include consumptions.",
            "type": "boolean",
            "default": false
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CurrencyReportV2"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AllocationsByEnvironmentPatchRequestModelV1": {
      "type": "object",
      "properties": {
        "currencyAllocations": {
          "description": "Specify the request body with environment ID and currency details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyAllocationRequestModelV1"
          }
        }
      },
      "additionalProperties": false
    },
    "AllocationsByEnvironmentResponseModelV1": {
      "description": "The response body includes environment ID and allocated currencies.",
      "type": "object",
      "properties": {
        "environmentId": {
          "description": "The environment ID for which the currency has been allocated.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "currencyAllocations": {
          "description": "The collection of currencies with allocation count.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyAllocationResponseModelV1"
          }
        }
      },
      "additionalProperties": false
    },
    "CurrencyAllocationRequestModelV1": {
      "type": "object",
      "properties": {
        "currencyType": {
          "$ref": "#/definitions/ExternalCurrencyType"
        },
        "allocated": {
          "format": "int32",
          "description": "Specify the currency count.",
          "type": "integer",
          "example": 10
        }
      },
      "additionalProperties": false
    },
    "CurrencyAllocationResponseModelV1": {
      "type": "object",
      "properties": {
        "currencyType": {
          "$ref": "#/definitions/ExternalCurrencyType"
        },
        "allocated": {
          "format": "int32",
          "description": "The allocated count of currency type",
          "type": "integer",
          "example": 10
        }
      },
      "additionalProperties": false
    },
    "CurrencyConsumption": {
      "type": "object",
      "properties": {
        "unitsConsumed": {
          "format": "int64",
          "type": "integer"
        },
        "lastUpdatedDay": {
          "format": "date-time",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "CurrencyReportV2": {
      "type": "object",
      "properties": {
        "currencyType": {
          "$ref": "#/definitions/ExternalCurrencyType"
        },
        "purchased": {
          "format": "int64",
          "type": "integer"
        },
        "allocated": {
          "format": "int64",
          "type": "integer"
        },
        "consumed": {
          "$ref": "#/definitions/CurrencyConsumption"
        }
      },
      "additionalProperties": false
    },
    "ExternalCurrencyType": {
      "description": "Available currency type which can be allocated to environment.",
      "enum": [
        "AI",
        "AppPass",
        "AppPassForTeams",
        "Invoice",
        "MCSSessions",
        "MCSMessages",
        "PAHostedRPA",
        "PAUnattendedRPA",
        "PerFlowPlan",
        "PortalAddOns",
        "PortalLogins",
        "PortalViews",
        "PowerPagesAuthenticated",
        "PowerPagesAnonymous",
        "PowerAutomatePerProcess",
        "ProcessMiningDataStorage",
        "SCMessages",
        "VAConversations"
      ],
      "type": "string",
      "example": "PowerAutomatePerProcess"
    },
    "BillingPolicyConditionsModel": {
      "description": "The ISV Contract API filter conditions.",
      "type": "object",
      "properties": {
        "apiFilter": {
          "$ref": "#/definitions/BillingPolicyConditionsApiFilterModel"
        }
      },
      "additionalProperties": false,
      "example": {
        "apiFilter": {
          "allowOtherPremiumConnectors": true,
          "requiredApis": [
            {
              "name": "connector1"
            },
            {
              "name": "connector2"
            }
          ]
        }
      }
    },
    "BillingPolicyConditionsApiFilterModel": {
      "description": "The Power Platform connector filter.",
      "type": "object",
      "properties": {
        "allowOtherPremiumConnectors": {
          "description": "A flag indicating whether metered usage that involves premium connectors may be attributed.",
          "type": "boolean"
        },
        "requiredApis": {
          "description": "A list of connectors, at least one of which must be involved in the metered usage to be attributed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillingPolicyConditionsApiModel"
          }
        }
      },
      "additionalProperties": false
    },
    "BillingPolicyConditionsApiModel": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of an API connector.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "BillingInstrumentModel": {
      "description": "The ISV billing instrument information.",
      "type": "object",
      "properties": {
        "subscriptionId": {
          "format": "uuid",
          "description": "The tenant subscription Id.",
          "type": "string",
          "example": {
            "subscriptionId": "00000000-0000-0000-0000-000000000000"
          }
        },
        "resourceGroup": {
          "description": "The resource group within the tenant subscription.",
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "BillingPolicyEnvironmentAddRequestModel": {
      "type": "object",
      "properties": {
        "environmentIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "BillingPolicyEnvironmentRemoveRequestModel": {
      "type": "object",
      "properties": {
        "environmentIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "BillingPolicyEnvironmentResponseModelV1": {
      "type": "object",
      "properties": {
        "billingPolicyId": {
          "type": "string"
        },
        "environmentId": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "BillingPolicyEnvironmentResponseModelV1ResponseWithOdataContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillingPolicyEnvironmentResponseModelV1"
          }
        },
        "@odata.nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "BillingPolicyPostRequestModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "billingInstrument": {
          "$ref": "#/definitions/BillingInstrumentModel"
        },
        "status": {
          "$ref": "#/definitions/BillingPolicyStatus"
        }
      },
      "additionalProperties": false
    },
    "BillingPolicyPutRequestModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/BillingPolicyStatus"
        }
      },
      "additionalProperties": false
    },
    "BillingPolicyResponseModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/BillingPolicyStatus"
        },
        "location": {
          "type": "string"
        },
        "billingInstrument": {
          "$ref": "#/definitions/BillingInstrumentModel"
        },
        "createdOn": {
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/Principal"
        },
        "lastModifiedOn": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/Principal"
        }
      },
      "additionalProperties": false
    },
    "BillingPolicyResponseModelResponseWithOdataContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillingPolicyResponseModel"
          }
        },
        "@odata.nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "BillingPolicyStatus": {
      "description": "The desired ISV contract status.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string"
    },
    "CapacityAvailabilityStatus": {
      "enum": [
        "None",
        "Available",
        "AvailableByOverflow",
        "NotAvailable"
      ],
      "type": "string"
    },
    "CapacityEntitlementType": {
      "enum": [
        "None",
        "DatabaseBase",
        "DatabaseIncremental",
        "DatabaseAddOn",
        "FileBase",
        "FileIncremental",
        "FileAddOn",
        "LogBase",
        "LogAddOn",
        "SubscriptionTrialDatabaseBase",
        "SubscriptionTrialFileBase",
        "SubscriptionTrialLogBase",
        "SubscriptionTrialEnvironmentCountBase",
        "SubscriptionTrialEnvironmentCountIncremental",
        "TrialDatabaseBase",
        "TrialFileBase",
        "TrialLogBase",
        "M365DatabaseBase",
        "M365DatabaseIncremental",
        "M365EnvironmentCountBase",
        "M365EnvironmentCountIncremental",
        "ApiCallCountIncremental",
        "ApiCallCountBase",
        "CapacityPassBase",
        "FinOpsDatabaseBase",
        "FinOpsDatabaseIncremental",
        "FinOpsFileBase",
        "FinOpsFileIncremental"
      ],
      "type": "string"
    },
    "CapacityStatusMessageCode": {
      "enum": [
        "AllCapacityAvailable",
        "DBCapacityOver",
        "LogOverDBCover",
        "LogCapacityOver",
        "FileOverDBCover",
        "FileOverLogCover",
        "FileOverDBAndLogCover",
        "FileCapacityOver",
        "DBAndLogOver",
        "DBAndFileOver",
        "LogAndFileOverDBCover",
        "LogAndFileOver",
        "AllCapacityOver",
        "LegacyCapacityAvailable",
        "LegacyCapacityOver",
        "FinOpsAllCapacityAvailable",
        "FinOpsNotAvailable",
        "FinOpsAllCapacityOver",
        "FinOpsDBCapacityOver",
        "FinOpsFileCapacityOver",
        "LegacyCapacityMoreThanEightyFive",
        "DBCapacityMoreThanEightyFive",
        "LogCapacityMoreThanEightyFive",
        "FileCapacityMoreThanEightyFive",
        "DBAndFileCapacityMoreThanEightyFive",
        "DBAndLogCapacityMoreThanEightyFive",
        "LogAndFileCapacityMoreThanEightyFive",
        "AllCapacityMoreThanEightyFive"
      ],
      "type": "string"
    },
    "CapacitySummary": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/CapacityAvailabilityStatus"
        },
        "statusMessage": {
          "type": "string"
        },
        "statusMessageCode": {
          "$ref": "#/definitions/CapacityStatusMessageCode"
        },
        "finOpsStatus": {
          "$ref": "#/definitions/CapacityAvailabilityStatus"
        },
        "finOpsStatusMessage": {
          "type": "string"
        },
        "finOpsStatusMessageCode": {
          "$ref": "#/definitions/CapacityStatusMessageCode"
        }
      },
      "additionalProperties": false
    },
    "CapacityType": {
      "enum": [
        "None",
        "Database",
        "File",
        "Log",
        "TrialDatabase",
        "TrialFile",
        "TrialLog",
        "SubscriptionTrialDatabase",
        "SubscriptionTrialFile",
        "SubscriptionTrialLog",
        "M365Database",
        "M365EnvironmentCount",
        "SubscriptionTrialEnvironmentCount",
        "CapacityPass",
        "ApiCallCount",
        "FinOpsDatabase",
        "FinOpsFile",
        "PIProcess"
      ],
      "type": "string"
    },
    "CapacityUnits": {
      "enum": [
        "None",
        "Unit",
        "MB"
      ],
      "type": "string"
    },
    "ConsumerIdentityModel": {
      "description": "The consumer identity for ISV contract.",
      "type": "object",
      "properties": {
        "tenantId": {
          "format": "uuid",
          "description": "The ID of the customer tenant.",
          "type": "string",
          "example": {
            "tenantId": "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "additionalProperties": false
    },
    "ConsumptionModel": {
      "type": "object",
      "properties": {
        "actual": {
          "format": "double",
          "type": "number"
        },
        "rated": {
          "format": "double",
          "type": "number"
        },
        "actualUpdatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "ratedUpdatedOn": {
          "format": "date-time",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "GetTemporaryCurrencyEntitlementCountResponseModel": {
      "type": "object",
      "properties": {
        "temporaryCurrencyEntitlementCount": {
          "format": "int32",
          "type": "integer"
        },
        "temporaryCurrencyEntitlementsAllowedPerMonth": {
          "format": "int32",
          "type": "integer"
        },
        "entitledQuantity": {
          "format": "int64",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "IsvContractPostRequestModel": {
      "description": "The ISV contract model for update operations.",
      "required": [
        "name",
        "geo",
        "status",
        "consumer",
        "conditions",
        "powerAutomatePolicy",
        "billingInstrument"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 64,
          "minLength": 10,
          "pattern": "/^[a-zA-Z\\d]+$/",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/BillingPolicyStatus"
        },
        "geo": {
          "description": "Specify the desired resource location for creation of an Azure Power Platform account for billing. Once set, this property cannot be updated. Power Platform environments using this ISV Contract for pay-as-you-go billing must be in the same location.",
          "type": "string",
          "items": {
            "example": [
              "asia",
              "australia",
              "canada",
              "europe",
              "france",
              "germany",
              "india",
              "japan",
              "korea",
              "norway",
              "southafrica",
              "southamerica",
              "switzerland",
              "unitedarabemirates",
              "unitedkingdom",
              "unitedstates"
            ]
          },
          "example": "unitedstates"
        },
        "consumer": {
          "$ref": "#/definitions/ConsumerIdentityModel"
        },
        "conditions": {
          "$ref": "#/definitions/BillingPolicyConditionsModel"
        },
        "billingInstrument": {
          "$ref": "#/definitions/BillingInstrumentModel"
        },
        "powerAutomatePolicy": {
          "$ref": "#/definitions/PowerAutomatePolicyModel"
        }
      },
      "additionalProperties": false,
      "example": {
        "name": "exampleContract",
        "geo": "unitedstates",
        "status": "Enabled",
        "consumer": {
          "tenantId": "00000000-0000-0000-0000-000000000000"
        },
        "conditions": {
          "apiFilter": {
            "allowOtherPremiumConnectors": true,
            "requiredApis": [
              {
                "name": "example-connector-1"
              },
              {
                "name": "example-connector-2"
              }
            ]
          }
        },
        "powerAutomatePolicy": {
          "cloudFlowRunsPayAsYouGoState": "Enabled",
          "desktopFlowUnattendedRunsPayAsYouGoState": "Enabled",
          "desktopFlowAttendedRunsPayAsYouGoState": "Enabled"
        },
        "billingInstrument": {
          "subscriptionId": "00000000-0000-0000-0000-000000000000",
          "resourceGroup": "resourceGroupName"
        }
      }
    },
    "IsvContractPutRequestModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/BillingPolicyStatus"
        },
        "conditions": {
          "$ref": "#/definitions/BillingPolicyConditionsModel"
        },
        "powerAutomatePolicy": {
          "$ref": "#/definitions/PowerAutomatePolicyModel"
        }
      },
      "additionalProperties": false
    },
    "IsvContractResponseModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/BillingPolicyStatus"
        },
        "geo": {
          "type": "string"
        },
        "consumer": {
          "$ref": "#/definitions/ConsumerIdentityModel"
        },
        "conditions": {
          "$ref": "#/definitions/BillingPolicyConditionsModel"
        },
        "billingInstrument": {
          "$ref": "#/definitions/BillingInstrumentModel"
        },
        "powerAutomatePolicy": {
          "$ref": "#/definitions/PowerAutomatePolicyModel"
        },
        "createdOn": {
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/Principal"
        },
        "lastModifiedOn": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/Principal"
        }
      },
      "additionalProperties": false
    },
    "IsvContractResponseModelResponseWithOdataContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IsvContractResponseModel"
          }
        },
        "@odata.nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "LegacyCapacityModel": {
      "type": "object",
      "properties": {
        "totalCapacity": {
          "format": "double",
          "type": "number"
        },
        "totalConsumption": {
          "format": "double",
          "type": "number"
        },
        "capacityUnits": {
          "$ref": "#/definitions/CapacityUnits"
        }
      },
      "additionalProperties": false
    },
    "LicenseDetailsModel": {
      "type": "object",
      "properties": {
        "entitlementCode": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "isTemporaryLicense": {
          "type": "boolean"
        },
        "temporaryLicenseExpiryDate": {
          "format": "date-time",
          "type": "string"
        },
        "servicePlanId": {
          "format": "uuid",
          "type": "string"
        },
        "skuId": {
          "format": "uuid",
          "type": "string"
        },
        "paid": {
          "$ref": "#/definitions/LicenseQuantity"
        },
        "trial": {
          "$ref": "#/definitions/LicenseQuantity"
        },
        "totalCapacity": {
          "format": "double",
          "type": "number"
        },
        "nextLifecycleDate": {
          "format": "date-time",
          "type": "string"
        },
        "capabilityStatus": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "LicenseModel": {
      "enum": [
        "None",
        "Legacy",
        "StorageDriven"
      ],
      "type": "string"
    },
    "LicenseQuantity": {
      "type": "object",
      "properties": {
        "enabled": {
          "format": "int32",
          "type": "integer"
        },
        "warning": {
          "format": "int32",
          "type": "integer"
        },
        "suspended": {
          "format": "int32",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "OverflowCapacityModel": {
      "type": "object",
      "properties": {
        "capacityType": {
          "$ref": "#/definitions/CapacityType"
        },
        "value": {
          "format": "double",
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "PowerAutomatePolicyModel": {
      "description": "The Power Platform requests policies.",
      "type": "object",
      "properties": {
        "cloudFlowRunsPayAsYouGoState": {
          "$ref": "#/definitions/PayAsYouGoState"
        },
        "desktopFlowUnattendedRunsPayAsYouGoState": {
          "$ref": "#/definitions/PayAsYouGoState"
        },
        "desktopFlowAttendedRunsPayAsYouGoState": {
          "$ref": "#/definitions/PayAsYouGoState"
        }
      },
      "additionalProperties": false
    },
    "PayAsYouGoState": {
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string"
    },
    "Principal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/PrincipalType"
        }
      },
      "additionalProperties": false
    },
    "PrincipalType": {
      "enum": [
        "None",
        "Application",
        "User",
        "DelegatedAdmin"
      ],
      "type": "string"
    },
    "ProblemDetails": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        }
      },
      "additionalProperties": { }
    },
    "StorageWarningThresholds": {
      "type": "object",
      "properties": {
        "storageCategory": {
          "type": "string"
        },
        "storageEntity": {
          "type": "string"
        },
        "thresholdInMB": {
          "format": "int32",
          "type": "integer"
        },
        "warningMessageConstKey": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "StorageWarningThresholdsDocument": {
      "type": "object",
      "properties": {
        "storageCategory": {
          "type": "string"
        },
        "storageEntity": {
          "type": "string"
        },
        "thresholds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageWarningThresholds"
          }
        },
        "isActive": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "TemporaryLicenseInfo": {
      "type": "object",
      "properties": {
        "hasTemporaryLicense": {
          "type": "boolean"
        },
        "temporaryLicenseExpiryDate": {
          "format": "date-time",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "TenantCapacityAndConsumptionModel": {
      "type": "object",
      "properties": {
        "capacityType": {
          "$ref": "#/definitions/CapacityType"
        },
        "capacityUnits": {
          "$ref": "#/definitions/CapacityUnits"
        },
        "totalCapacity": {
          "format": "double",
          "type": "number"
        },
        "maxCapacity": {
          "format": "double",
          "type": "number"
        },
        "consumption": {
          "$ref": "#/definitions/ConsumptionModel"
        },
        "status": {
          "$ref": "#/definitions/CapacityAvailabilityStatus"
        },
        "overflowCapacity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OverflowCapacityModel"
          }
        },
        "capacityEntitlements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TenantCapacityEntitlementModel"
          }
        }
      },
      "additionalProperties": false
    },
    "TenantCapacityDetailsModel": {
      "type": "object",
      "properties": {
        "tenantId": {
          "format": "uuid",
          "type": "string"
        },
        "licenseModelType": {
          "$ref": "#/definitions/LicenseModel"
        },
        "capacitySummary": {
          "$ref": "#/definitions/CapacitySummary"
        },
        "tenantCapacities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TenantCapacityAndConsumptionModel"
          }
        },
        "legacyModelCapacity": {
          "$ref": "#/definitions/LegacyCapacityModel"
        },
        "temporaryLicenseInfo": {
          "$ref": "#/definitions/TemporaryLicenseInfo"
        }
      },
      "additionalProperties": false
    },
    "TenantCapacityEntitlementModel": {
      "type": "object",
      "properties": {
        "capacityType": {
          "$ref": "#/definitions/CapacityType"
        },
        "capacitySubType": {
          "$ref": "#/definitions/CapacityEntitlementType"
        },
        "totalCapacity": {
          "format": "double",
          "type": "number"
        },
        "maxNextLifecycleDate": {
          "format": "date-time",
          "type": "string"
        },
        "licenses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LicenseDetailsModel"
          }
        }
      },
      "additionalProperties": false
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize?resource=https://api.powerplatform.com",
      "scopes": {
        ".default": ".default"
      },
      "description": "Microsoft Entra ID OAuth2"
    }
  },
  "security": [
    {
      "oauth2": [
        ".default"
      ]
    }
  ]
}
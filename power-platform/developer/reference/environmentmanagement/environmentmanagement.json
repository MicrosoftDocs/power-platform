{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Power Platform REST API - environment management",
    "description": "Unified API for all administrative capabilities in Microsoft Power Platform.",
    "version": "2022-03-01-preview"
  },
  "host": "api.powerplatform.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/environmentmanagement/environments/{environmentId}/settings": {
      "post": {
        "tags": [
          "EnvironmentManagementSettings"
        ],
        "summary": "Create environment management settings.",
        "operationId": "CreateEnvironmentManagementSettings",
        "consumes": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "application/json-patch+json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "environmentId",
            "description": "The environment ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Payload for the environment management setting",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateEnvironmentManagementSettingResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/CreateEnvironmentManagementSettingResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/CreateEnvironmentManagementSettingResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "EnvironmentManagementSettings"
        ],
        "summary": "Gets environment management setting by ID. Only columns provided in the $select queryOption will be returned.\r\nA list of selectable properties is defined in the Microsoft.Dynamics.Artemis.Infrastructure.Models.EnvironmentManagementSetting type.",
        "operationId": "ListEnvironmentManagementSettings",
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "environmentId",
            "description": "ID for the environment management setting.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Number of records to retrieve. If not set, five humdred records are returned.",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "List of properties to select for this entity.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetEnvironmentManagementSettingResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/GetEnvironmentManagementSettingResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/GetEnvironmentManagementSettingResponse"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/GetEnvironmentManagementSettingResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "EnvironmentManagementSettings"
        ],
        "summary": "Updates fields on the EnvironmentManagementSetting. This API currently doesn't return any entity data in the response body.",
        "operationId": "UpdateEnvironmentManagementSettings",
        "consumes": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "application/json-patch+json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "text/plain",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "environmentId",
            "description": "The ID for the environment management setting being updated.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Details on the environment management setting to be updated",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "412": {
            "description": "Precondition Failed",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          }
        }
      }
    },
    "/environmentmanagement/environmentGroupOperations/{operationId}": {
      "get": {
        "tags": [
          "EnvironmentGroups"
        ],
        "summary": "Get operation status.",
        "operationId": "GetEnvironmentGroupOperation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "operationId",
            "description": "The operation ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/environmentmanagement/environmentGroups": {
      "post": {
        "tags": [
          "EnvironmentGroups"
        ],
        "summary": "Create the environment group.",
        "operationId": "CreateEnvironmentGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The group.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentGroup"
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "get": {
        "tags": [
          "EnvironmentGroups"
        ],
        "summary": "List the environment groups.",
        "operationId": "ListEnvironmentGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentGroupResponseWithOdataContinuation"
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/environmentmanagement/environmentGroups/{groupId}": {
      "get": {
        "tags": [
          "EnvironmentGroups"
        ],
        "summary": "Get the environment group.",
        "operationId": "GetEnvironmentGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "description": "The group ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentGroup"
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EnvironmentGroups"
        ],
        "summary": "Update the environment group.",
        "operationId": "UpdateEnvironmentGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "description": "The group ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The group.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentGroup"
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EnvironmentGroups"
        ],
        "summary": "Delete the environment group.",
        "operationId": "DeleteEnvironmentGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "description": "The group ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/environmentmanagement/environmentGroups/{groupId}/addEnvironment/{environmentId}": {
      "post": {
        "tags": [
          "EnvironmentGroups"
        ],
        "summary": "Add the environment to the environment group.",
        "operationId": "AddEnvironmentToGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "description": "The group ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "The environment ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/environmentmanagement/environmentGroups/{groupId}/removeEnvironment/{environmentId}": {
      "post": {
        "tags": [
          "EnvironmentGroups"
        ],
        "summary": "Remove the environment from the environment group.",
        "operationId": "RemoveEnvironmentFromGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "description": "The group ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "The environment ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/environmentmanagement/environments": {
      "get": {
        "tags": [
          "Environments"
        ],
        "summary": "Retrieve a list of environments.",
        "description": "Returns a list of environments available for the authenticated user.",
        "operationId": "ListEnvironmentsForUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of environments.",
            "schema": {
              "$ref": "#/definitions/EnvironmentList"
            }
          }
        }
      }
    },
    "/environmentmanagement/environments/{environmentId}": {
      "get": {
        "tags": [
          "Environments"
        ],
        "summary": "Retrieve a single environment by ID.",
        "operationId": "GetEnvironmentByIdForUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "environmentId",
            "description": "The environment ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version.",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CreateEnvironmentManagementSettingResponse": {
      "description": "Represents the response object for APIs in this service.",
      "type": "object",
      "properties": {
        "objectResult": {
          "description": "Gets or sets the ID of the entity being created in the response",
          "type": "string"
        },
        "errors": {
          "$ref": "#/definitions/ErrorResponse"
        },
        "nextLink": {
          "format": "uri",
          "description": "Gets or sets the next link if there are more records to be returned",
          "type": "string"
        },
        "responseMessage": {
          "description": "Gets or sets the error message.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "EnvironmentManagementSetting": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "tenantId": {
          "format": "uuid",
          "type": "string"
        },
        "enableIpBasedStorageAccessSignatureRule": {
          "type": "boolean"
        },
        "allowedIpRangeForStorageAccessSignatures": {
          "type": "string"
        },
        "ipBasedStorageAccessSignatureMode": {
          "format": "int32",
          "type": "integer"
        },
        "loggingEnabledForIpBasedStorageAccessSignature": {
          "type": "boolean"
        },
        "rowRevision": {
          "format": "int64",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "ErrorDetail": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          }
        }
      },
      "additionalProperties": false
    },
    "GetEnvironmentManagementSettingResponse": {
      "description": "Represents the response object for APIs in this service.",
      "type": "object",
      "properties": {
        "objectResult": {
          "description": "Gets or sets the fields for the entities being queried.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentManagementSetting"
          }
        },
        "errors": {
          "$ref": "#/definitions/ErrorResponse"
        },
        "nextLink": {
          "format": "uri",
          "description": "Gets or sets the next link if there are more records to be returned",
          "type": "string"
        },
        "responseMessage": {
          "description": "Gets or sets the error message.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "OperationResponse": {
      "description": "Represents the response object for APIs in this service.",
      "type": "object",
      "properties": {
        "objectResult": {
          "description": "Gets or sets the response's object"
        },
        "errors": {
          "$ref": "#/definitions/ErrorResponse"
        },
        "nextLink": {
          "format": "uri",
          "description": "Gets or sets the next link if there are more records to be returned",
          "type": "string"
        },
        "debugErrors": {
          "description": "Gets or sets debug errors, that are only shown for private/local testing",
          "type": "string"
        },
        "responseMessage": {
          "description": "Gets or sets the error message.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "EnvironmentResponse": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The value of ID property on the environment object.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the environment.",
          "type": "string"
        },
        "tenantId": {
          "description": "The value of tenantId property on the environment object.",
          "type": "string"
        },
        "type": {
          "description": "The type of environment.",
          "type": "string"
        },
        "geo": {
          "description": "The geographical region of the environment.",
          "type": "string"
        },
        "azureRegion": {
          "description": "The Azure region of the environment.",
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "The creation date and time of the environment.",
          "type": "string"
        },
        "deletedDateTime": {
          "format": "date-time",
          "description": "The deletion date and time of the environment.",
          "type": "string"
        },
        "dataverseId": {
          "description": "The value of dataverseId property on the environment object.",
          "type": "string"
        },
        "url": {
          "description": "The URL of the environment.",
          "type": "string"
        },
        "version": {
          "description": "The version of the environment.",
          "type": "string"
        },
        "domainName": {
          "description": "The domain name of the environment.",
          "type": "string"
        },
        "state": {
          "description": "The state of the environment.",
          "type": "string"
        },
        "adminMode": {
          "description": "The administrative mode of the environment.",
          "type": "string"
        },
        "backgroundOperationsState": {
          "description": "The background operations state of the environment.",
          "type": "string"
        },
        "protectionLevel": {
          "description": "The protection level of the environment.",
          "type": "string"
        },
        "retentionDetails": {
          "description": "The retention details of the environment.",
          "type": "object",
          "properties": {
            "retentionPeriod": {
              "description": "The retention period of the environment.",
              "type": "string"
            },
            "availableFromDateTime": {
              "format": "date-time",
              "description": "The available from date and time of the environment.",
              "type": "string"
            }
          }
        }
      }
    },
    "EnvironmentList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentResponse"
          }
        }
      }
    },
    "Principal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "userPrincipalName": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ProblemDetails": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "extensions": {
          "type": "object",
          "additionalProperties": {},
          "readOnly": true
        }
      },
      "additionalProperties": false
    },
    "EnvironmentGroupResponseWithOdataContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentGroup"
          }
        },
        "@odata.nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "EnvironmentGroup": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "parentGroupId": {
          "format": "uuid",
          "type": "string"
        },
        "childrenGroupIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "createdTime": {
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/Principal"
        },
        "lastModifiedTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/Principal"
        }
      },
      "additionalProperties": false
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize?resource=https://api.powerplatform.com",
      "scopes": {
        ".default": ".default"
      },
      "description": "Microsoft Entra ID OAuth2"
    }
  },
  "security": [
    {
      "oauth2": [
        ".default"
      ]
    }
  ]
}